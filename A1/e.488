% This file tests the usage of arithmetic, logical, and comparison operators
{
% a program using recursive functions and procedures with and without parameters
% include at least one nested procedure and one nested function declaration

    procedure proc_with_args(n: Integer) {
        write "Simple Procedure Ok"
    }

    procedure proc_without_args {
        write "Simple Procedure Ok"
    }

    function func_with_args(n: Integer) {
        write "Simple func Ok"
        return with n
    }

    function func_without_args {
        write "Simple func Ok"
        return with 0
    }

    procedure func_nested(n : Integer) : Integer {
        function x : Integer {
            return with n
        }
        x
    }

    procedure proc_nested(n : Integer) {
        procedure x {
            write "Simple proc nested Ok"
        }
        x
    }

    function fib_rec(n: Integer) : Integer {
        if n = 1 or n = 2 then
            return with 1
        else
            return with fib(n - 1) + fib(n - 2)
    }
    proc_with_args(10)
    proc_without_args
    func_with_args(10)
    func_without_args
    func_nested(10)
    proc_nested(10)
}
